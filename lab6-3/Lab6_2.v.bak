module Lab6_2 (SW, KEY, CLOCK_50, LEDR, HEX0, HEX1, HEX2, HEX3);
input [2:0]KEY;
input [9:0]SW;
input CLOCK_50
wire [15:0]addr;
wire [15:0]data;
wire [15:0]dataout;
wire wr_en;
wire LED_en;
wire W;

assign wr_en = (~(addr[12]|addr[13]|addr[14]|addr[15])) & W;
assign LED_en = (~(~addr[12]|addr[13]|addr[14]|addr[15])) & W;

output [15:0]LEDR;
output [0:6]HEX0, HEX1, HEX2, HEX3;


proc p0 (SW[9], dataout, KEY, LEDR, HEX0, HEX1, HEX2, HEX3);
mem m0 (addr, ~KEY[2], data, wr_en, dataout);
regR LEDs ();
regR regrun ();

endmodule

module regR (din, rin, clock, qout);
	input [15:0]din;
	input clock, rin;
	output reg [15:0]qout;
	
	always @(posedge clock)
		if (rin==1) qout <= din;
endmodule

